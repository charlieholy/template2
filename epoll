#include <stdio.h>
#include <iostream>
#include <sys/epoll.h>
using namespace std;

#include <sys/time.h>
#include <sys/timerfd.h>
#include <string.h>
string printTime()
{
    struct timeval  tv;
    gettimeofday(&tv, NULL);

    time_t now;
    char szTime[32];
    time(&now);
    int lenDT = strftime(szTime, sizeof(szTime), "%Y-%m-%d %H:%M:%S", localtime(&now) );

    snprintf(szTime + lenDT, sizeof(szTime) - lenDT,
        ".%06ld:",
        tv.tv_usec
    );
    return szTime;
    
}

int main()
{
    int eq = 0;
    eq = epoll_create(1024);

    int tfd = timerfd_create(CLOCK_MONOTONIC, TFD_NONBLOCK);
    itimerspec tmp;
	itimerspec dummy;
	memset(&tmp, 0, sizeof (tmp));
    int seconds = 3;
	tmp.it_interval.tv_nsec = 0;
	tmp.it_interval.tv_sec = seconds;
	tmp.it_value.tv_nsec = 0;
	tmp.it_value.tv_sec = seconds;
    timerfd_settime(tfd,0,&tmp,&dummy);
    struct epoll_event evt = {0,
		{0}};
	evt.events = EPOLLIN;
	//evt.data.ptr = pIOHandler->GetIOHandlerManagerToken();
	if (epoll_ctl(eq, EPOLL_CTL_ADD, tfd, &evt) != 0) {
        cout << "epoll err..." << endl;
    }


    struct epoll_event _query[16];
    cout << printTime() << "eq:" << eq << endl;
    epoll_wait(eq,_query,1024,-1);
    cout << printTime() << "after wait..." << endl;

    return 0;
}

//
2020-12-12 12:02:33.499895:eq:6
2020-12-12 12:02:36.500002:after wait...
